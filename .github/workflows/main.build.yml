# This workflow builds the changes and executes some sanity checks.
name: Project Build

on:
  pull_request:
    branches: [ "main" ]

jobs:
  targets:
    runs-on: ubuntu-latest
    outputs:
      target-output: ${{ steps.get_targets.outputs.build_targets }}

    steps:
      - uses: actions/checkout@v3
    
      - name: Set get-targets script as executable
        run: chmod +x ./get-targets.sh
        working-directory: ci

      - name: Run get targets
        id: get_targets
        run: echo "build_targets=$(./ci/get-targets.sh $GITHUB_HEAD_REF)" >> $GITHUB_OUTPUT
  
  # Task 1.0
  # BUILD SCOUT AND RUN TESTS
  build_scout:
    needs: targets
    if: |
     ${{
        contains(needs.targets.outputs.target-output, '.github') ||
        contains(needs.targets.outputs.target-output, 'ci') ||
        contains(needs.targets.outputs.target-output, 'Scout')
      }}
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: 'adopt'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2
      
      - name: Setup flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true
          cache-path: ${{ runner.tool_cache }}/flutter/linux

      - name: Get dependencies
        run: flutter pub get
        working-directory: Scout

      - name: Run build
        run: flutter build appbundle
        working-directory: Scout

  # Task 1.1
  # ANALYZE SCOUT
  analyze_scout:
    needs: build_scout
    if: ${{ contains(needs.targets.outputs.target-output, 'Scout') }}
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      - name: Run flutter analyze
        run: flutter analyze
        working-directory: Scout

  # Task 2.0
  # BUILD SCOUT API
  build_scout_api:
    needs: targets
    if: |
     ${{
        contains(needs.targets.outputs.target-output, '.github') ||
        contains(needs.targets.outputs.target-output, 'ci') ||
        contains(needs.targets.outputs.target-output, 'ScoutAPI')
      }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3

      - name: Run go build
        run: go build ScoutAPI
        working-directory: ScoutAPI

  # Task 2.1
  # CHECK SCOUTAPI FORMAT
  format_scoutapi:
    needs: build_scout_api
    if: ${{ contains(needs.targets.outputs.target-output, 'ScoutAPI') }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
      
      - name: Set format script as executable
        run: chmod +x ./go-format.sh
        working-directory: ci

      - name: Run go format
        run: ./go-format.sh
        working-directory: ci

  # Task 3.0
  # BUILD SCOUT INSIGHTS
  build_scout_insights:
    needs: targets
    if: |
     ${{
        contains(needs.targets.outputs.target-output, '.github') ||
        contains(needs.targets.outputs.target-output, 'ci') ||
        contains(needs.targets.outputs.target-output, 'ScoutInsights')
      }}
    runs-on: macos-latest
    
    steps:
      - uses: actions/checkout@v3
      - uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: Run Xcode Build
        run: xcodebuild -scheme ScoutInsights -sdk iphoneos -allowProvisioningUpdates CODE_SIGNING_ALLOWED=NO build
        working-directory: ScoutInsights
